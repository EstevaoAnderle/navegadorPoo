package view;

import java.awt.AWTException;
import java.awt.Color;
import java.awt.Event;
import java.awt.Robot;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import model.bean.Favorito;
import model.dao.favoritoDAO;

/**
 * Classe que exibe e trata os favoritos.
 *
 * @author Estêvão Anderle, Lenon de Paula
 */
public class MenuFavoritos extends javax.swing.JFrame {

    public MenuFavoritos() {
        initComponents();
        //Isso faz com que ele sempre inicie centralizado
        this.setLocationRelativeTo(null);
        DefaultTableModel dtmFavorito = (DefaultTableModel) jTFavorito.getModel();
        getAllFavorito();
    }

    /**
     * Busca todos os favoritos e exibe na tabela.
     */
    public void getAllFavorito() {
        DefaultTableModel dtmHistorico = (DefaultTableModel) jTFavorito.getModel();
        dtmHistorico.setNumRows(0);
        favoritoDAO fDAO = new favoritoDAO();

        for (Favorito f : fDAO.getAll()) {
            dtmHistorico.addRow(new Object[]{
                f.getData_armazenamento(),
                f.getNome(),
                f.getUrl()
            });

        }
    }

    /**
     * Busca todos os favoritos, filtrando por nome.
     *
     * @param nome do favorito pesquisado
     */
    public void getAllFavoritoNome(String nome) {
        DefaultTableModel dtmHistorico = (DefaultTableModel) jTFavorito.getModel();
        dtmHistorico.setNumRows(0);
        favoritoDAO fDAO = new favoritoDAO();

        for (Favorito f : fDAO.getForNome(nome)) {
            dtmHistorico.addRow(new Object[]{
                f.getData_armazenamento(),
                f.getNome(),
                f.getUrl()
            });
        }
    }

    /**
     * Busca todos os favoritos, filtrando por data.
     *
     * @param data do favorito pesquisado
     */
    public void getAllFavoritoData(String data) {
        DefaultTableModel dtmHistorico = (DefaultTableModel) jTFavorito.getModel();
        dtmHistorico.setNumRows(0);
        favoritoDAO fDAO = new favoritoDAO();

        for (Favorito f : fDAO.getForDate(data)) {
            dtmHistorico.addRow(new Object[]{
                f.getData_armazenamento(),
                f.getNome(),
                f.getUrl()
            });
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCBFiltro = new javax.swing.JComboBox<>();
        jTFPesquisarFavorito = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTFavorito = new javax.swing.JTable();
        jBCancelar = new javax.swing.JButton();
        jBBuscar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Favoritos");
        setResizable(false);

        jCBFiltro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nome:", "Adicionado em:" }));
        jCBFiltro.setToolTipText("Filtrar por:");

        jTFPesquisarFavorito.setForeground(new java.awt.Color(153, 153, 153));
        jTFPesquisarFavorito.setText("Pesquisar nos favoritos");
        jTFPesquisarFavorito.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTFPesquisarFavoritoFocusGained(evt);
            }
        });

        jTFavorito.setAutoCreateRowSorter(true);
        jTFavorito.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Salvo em:", "Página:", "Endereço:"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTFavorito.setRowSelectionAllowed(false);
        jTFavorito.getTableHeader().setReorderingAllowed(false);
        jTFavorito.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTFavoritoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTFavorito);

        jBCancelar.setText("Fechar");
        jBCancelar.setToolTipText("Fechar favoritos");
        jBCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCancelarActionPerformed(evt);
            }
        });

        jBBuscar.setText("Buscar");
        jBBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBBuscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 605, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jCBFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTFPesquisarFavorito)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBBuscar))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jBCancelar)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCBFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTFPesquisarFavorito, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBBuscar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBCancelar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTFPesquisarFavoritoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTFPesquisarFavoritoFocusGained
        if (jTFPesquisarFavorito.getText().equals("Pesquisar nos favoritos")) {
            jTFPesquisarFavorito.setText("");
            jTFPesquisarFavorito.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_jTFPesquisarFavoritoFocusGained

    private void jBCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCancelarActionPerformed
        //Ao clicar no botão, ele dispara esse evento e fecha a janela.
        dispose();
    }//GEN-LAST:event_jBCancelarActionPerformed

    private void jBBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBBuscarActionPerformed
        if (String.valueOf(jCBFiltro.getSelectedItem()).equals("Nome:")) {
            getAllFavoritoNome(jTFPesquisarFavorito.getText());
        } else {
            getAllFavoritoData(jTFPesquisarFavorito.getText());
        }
    }//GEN-LAST:event_jBBuscarActionPerformed

    private void jTFavoritoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTFavoritoMouseClicked
        if (evt.getClickCount() == 2) {
            String url = (String) jTFavorito.getValueAt(jTFavorito.getSelectedRow(), 2);
            interfaceGrafica.adicionaUrlExterna(url);
            dispose();
        }
    }//GEN-LAST:event_jTFavoritoMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuFavoritos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuFavoritos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuFavoritos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuFavoritos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MenuFavoritos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBBuscar;
    private javax.swing.JButton jBCancelar;
    private javax.swing.JComboBox<String> jCBFiltro;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTFPesquisarFavorito;
    private javax.swing.JTable jTFavorito;
    // End of variables declaration//GEN-END:variables
}
